{{- if eq .Values.deployType "DEV" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.db.secret.name }}
  namespace: {{ .Values.namespace }}
type: generic
data:
  password: {{ .Values.db.secret.passwordValue }}
  username: {{ .Values.db.secret.usernameValue }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.smtp.secret.name }}
  namespace: {{ .Values.namespace }}
type: generic
data:
  password: {{ b64enc .Values.smtp.secret.passwordValue }}
  username: {{ b64enc .Values.smtp.secret.usernameValue }}
{{- else if eq .Values.deployType "PROD"}}
apiVersion: secrets.hashicorp.com/v1beta1
kind: HCPVaultSecretsApp
metadata:
  name: {{ .Values.db.secret.name }}
  namespace: {{ .Values.db.secret.providerNamespace }}
spec:
  appName: {{ .Values.db.appName }}
  hcpAuthRef: {{ .Values.db.secret.provider }}
  destination:
    create: true
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: {{ .Values.namespace }}
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: {{ .Values.namespace }}
    name: {{ .Values.db.secret.name }}
  refreshAfter: 1h
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: HCPVaultSecretsApp
metadata:
  name: {{ .Values.smtp.secret.name }}
  namespace: {{ .Values.db.secret.providerNamespace }}
spec:
  appName: {{ .Values.smtp.appName }}
  hcpAuthRef: {{ .Values.db.secret.provider }}
  destination:
    create: true
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: {{ .Values.namespace }}
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: {{ .Values.namespace }}
    name: {{ .Values.smtp.secret.name }}
  refreshAfter: 1h
{{- end }}