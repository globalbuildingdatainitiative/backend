schema @link(url: "https://specs.apollo.dev/federation/v2.7", import: ["@key", "@shareable"]) {
  query: Query
  mutation: Mutation
}

enum CountryCodes {
  AFG
  ALA
  ALB
  DZA
  ASM
  AND
  AGO
  AIA
  ATA
  ATG
  ARG
  ARM
  ABW
  AUS
  AUT
  AZE
  BHS
  BHR
  BGD
  BRB
  BLR
  BEL
  BLZ
  BEN
  BMU
  BTN
  BOL
  BES
  BIH
  BWA
  BVT
  BRA
  IOT
  BRN
  BGR
  BFA
  BDI
  CPV
  KHM
  CMR
  CAN
  CYM
  CAF
  TCD
  CHL
  CHN
  CXR
  CCK
  COL
  COM
  COG
  COD
  COK
  CRI
  CIV
  HRV
  CUB
  CUW
  CYP
  CZE
  DNK
  DJI
  DMA
  DOM
  ECU
  EGY
  SLV
  GNQ
  ERI
  EST
  SWZ
  ETH
  FLK
  FRO
  FJI
  FIN
  FRA
  GUF
  PYF
  ATF
  GAB
  GMB
  GEO
  DEU
  GHA
  GIB
  GRC
  GRL
  GRD
  GLP
  GUM
  GTM
  GGY
  GIN
  GNB
  GUY
  HTI
  HMD
  VAT
  HND
  HKG
  HUN
  ISL
  IND
  IDN
  IRN
  IRQ
  IRL
  ISR
  ITA
  JAM
  JPN
  JEY
  JOR
  KAZ
  KEN
  KIR
  PRK
  KOR
  KWT
  KGZ
  LAO
  LVA
  LBN
  LSO
  LBR
  LBY
  LIE
  LTU
  LUX
  MAC
  MDG
  MWI
  MYS
  MDV
  MLI
  MLT
  MHL
  MTQ
  MRT
  MUS
  MYT
  MEX
  FSM
  MDA
  MCO
  MNG
  MNE
  MSR
  MAR
  MOZ
  MMR
  NAM
  NRU
  NPL
  NLD
  NCL
  NZL
  NIC
  NER
  NGA
  NIU
  NFK
  MNP
  NOR
  OMN
  PAK
  PLW
  PSE
  PAN
  PNG
  PRY
  PER
  PHL
  PCN
  POL
  PRT
  PRI
  QAT
  REU
  ROU
  RUS
  RWA
  RYU
  SBH
  SHN
  KNA
  LCA
  MAF
  SPM
  VCT
  WSM
  SMR
  STP
  SAU
  SEN
  SRB
  SYC
  SLE
  SGP
  SXM
  SVK
  SVN
  SLB
  SOM
  ZAF
  SGS
  SSD
  ESP
  LKA
  SDN
  SUR
  SJM
  SWE
  CHE
  SYR
  TWN
  TJK
  TZA
  THA
  TLS
  TGO
  TKL
  TON
  TTO
  TUN
  TUR
  TKM
  TCA
  TUV
  UGA
  UKR
  ARE
  GBR
  UMI
  USA
  URY
  UZB
  VUT
  VEN
  VNM
  VGB
  VIR
  WLF
  ESH
  YEM
  ZMB
  ZWE
}

input FilterOptions {
  equal: String = null
  isTrue: Boolean = null
}

input InputOrganization {
  id: UUID! = "annotation=NoneType required=False default_factory=uuid4"
  name: String!
  address: String!
  city: String!
  country: CountryCodes!
  metaData: InputOrganizationMetaData! = {stakeholders: []}
}

input InputOrganizationMetaData {
  stakeholders: [StakeholderEnum!]! = []
}

type Mutation {
  """
  Creates multiple organizations and associates them with the current user
  """
  createOrganizations(organizations: [InputOrganization!]!): [Organization!]!

  """Updates an existing Organization"""
  updateOrganizations(organizations: [InputOrganization!]!): [Organization!]!

  """
  Deletes a list of Organizations by their IDs and returns a list of deleted IDs
  """
  deleteOrganizations(ids: [UUID!]!): [UUID!]!
}

type Organization @key(fields: "id") {
  id: UUID!
  name: String!
  address: String!
  city: String!
  country: CountryCodes!
  metaData: OrganizationMetaData!
}

input OrganizationFilter {
  id: FilterOptions = null
  name: FilterOptions = null
  address: FilterOptions = null
  city: FilterOptions = null
  country: FilterOptions = null
  metaData: OrganizationMetaDataFilter = null
}

type OrganizationMetaData {
  stakeholders: [StakeholderEnum!]!
}

input OrganizationMetaDataFilter {
  stakeholders: FilterOptions = null
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!

  """Returns all Organizations"""
  organizations(filters: OrganizationFilter = null): [Organization!]!
}

enum StakeholderEnum {
  BUILDING_DATA_OWNERS
  DESIGN_PROFESSIONALS
  LCA_TOOL_DEVELOPERS
  LCA_CONSULTANTS
  BUILDING_USERS
  CIVIL_SOCIETY
  CLIENTS_INVESTORS_OWNERS
  CONSTRUCTION_COMPANIES
  CONSTRUCTION_PRODUCT_MANUFACTURERS
  FACILITY_MANAGERS
  FINANCIAL_SERVICE_PROVIDERS
  FUNDING_SYSTEM_DEVELOPERS
  STANDARDIZATION_BODIES
  MEDIA_REPRESENTATIVES
  POLICY_LAW_MAKERS
  PRODUCT_LCA_DATABASE_DEVELOPERS
  PRODUCT_LCA_EPD_DATA_DEVELOPERS
  RESEARCHERS
  SURVEYORS_VALUATION_PROFESSIONALS
  SUSTAINABILITY_ASSESSMENT_SYSTEM_DEVELOPERS
  SUSTAINABILITY_AUDITORS
  ESG_CONSULTANTS
}

scalar UUID

type User @key(fields: "id") {
  id: UUID!
  organizationId: UUID @shareable
  organization: Organization
}

scalar _Any

union _Entity = Organization | User

type _Service {
  sdl: String!
}
