"""Date with time (isoformat)"""
scalar DateTime

input FilterOptions {
  equal: String = null
  isTrue: Boolean = null
}

type Mutation {
  """Update user details"""
  updateUser(userInput: UpdateUserInput!): User!
}

type Query {
  _service: _Service!

  """Returns all Users"""
  users(filters: UserFilters = null, sortBy: UserSort = null): [User!]!
}

enum SortOptions {
  ASC
  DSC
}

scalar UUID

input UpdateUserInput {
  id: UUID!
  firstName: String = null
  lastName: String = null
  email: String = null
  currentPassword: String = null
  newPassword: String = null
}

type User {
  id: UUID!
  firstName: String
  lastName: String
  email: String!
  timeJoined: DateTime!
  organizationId: UUID
}

input UserFilters {
  id: FilterOptions = null
  firstName: FilterOptions = null
  lastName: FilterOptions = null
  email: FilterOptions = null
  organizationId: FilterOptions = null
}

input UserSort {
  id: SortOptions = null
  firstName: SortOptions = null
  lastName: SortOptions = null
  name: SortOptions = null
  organizationId: SortOptions = null
}

scalar _Any

type _Service {
  sdl: String!
}
